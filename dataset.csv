code,label
os.system(input('Enter command: '))  # Kullanıcı girdisini direkt çalıştırma,insecure
"import subprocess
subprocess.run(['ls', '-l'], shell=False)  # Güvenli komut çalıştırma",secure
eval(input('Enter code: '))  # Eval ile kullanıcı kodu çalıştırma,insecure
"import ast
ast.literal_eval(input('Enter data: '))  # Güvenli veri çözümleme",secure
pickle.loads(data)  # Güvenilmeyen veriyi yükleme,insecure
"import json
json.loads(data)  # JSON ile güvenli yükleme",secure
os.popen(user_input).read()  # Güvensiz pipe işlemi,insecure
"subprocess.check_output(['ls', '-l'])  # Güvenli çıktı alma",secure
"yaml.load(data, Loader=yaml.Loader)  # Güvensiz YAML yükleme",insecure
yaml.safe_load(data)  # Güvenli YAML yükleme,secure
"mysql_query = ""SELECT * FROM users WHERE id = "" + user_input
cursor.execute(mysql_query)  # SQL Injection",insecure
"cursor.execute(""SELECT * FROM users WHERE id = %s"", (user_input,))  # Parametreli sorgu",secure
template = f'<h1>{user_input}</h1>'  # XSS açığı,insecure
"from markupsafe import escape
template = f'<h1>{escape(user_input)}</h1>'  # XSS koruması",secure
"open(file_name, 'w').write(data)  # Güvensiz dosya yazma",insecure
"with open(file_name, 'w') as f:
    f.write(data)  # Dosya izinlerini kontrol et",secure
__import__(module_name)  # Dinamik modül yükleme,insecure
"allowed_modules = ['math', 'json']
if module_name in allowed_modules:
    __import__(module_name)",secure
os.remove(user_input)  # Kullanıcı girdisiyle dosya silme,insecure
"safe_path = os.path.normpath(user_input)
if safe_path.startswith('/safe/dir'):
    os.remove(safe_path)",secure
xml.etree.ElementTree.fromstring(xml_data)  # XXE saldırısına açık,insecure
defusedxml.ElementTree.fromstring(xml_data)  # XXE korumalı,secure
